<?xml version="1.0"?>
<sites>
	<info>
		<version>2.18</version>
	</info>
	<site name="MangaDex">
		<!-- essential args. you will need most of these. -->
		<site_url>https://mangadex.org/</site_url> <!-- url of the main website -->
		<abbr>DX</abbr> <!-- 2 letter abbreviation of the site's name. -->
		<site_parser_re>https?://(?:www\.)?mangadex.(org|cc)/(title|manga)/\d*</site_parser_re> <!-- regex that matches if the given url is a series on this site -->
		<image_referer>https://mangadex.org</image_referer> <!-- If images are hosted on an external site you may need to override the referer header. -->
		<api_url>https://api.mangadex.org/</api_url> <!-- for sites that have a public api -->
	</site>
	<site name="MangaSee">
		<!-- essential args. must supply all of these -->
		<site_url>http://mangasee123.com</site_url> <!-- url of the main website -->
		<abbr>SE</abbr> <!-- 2 letter abbreviation of the site's name. -->
		<site_parser_re>https?://(?:www\.)?mangasee123.com/manga/.*</site_parser_re> <!-- regex that matches if the given url is a series on this site -->
		<title_xpath>substring(//h1[@class='SeriesName']/text(),1)</title_xpath> <!-- xpath that matches the series' title -->
		<chapter_nums_xpath>//a/@chapter</chapter_nums_xpath> <!-- xpath that matches all chapter numbers on the main series page -->
		<chapter_urls_xpath>//a[@chapter]/@href</chapter_urls_xpath> <!-- xpath that matches all chapter urls on the main series page -->
		<!-- optional args, delete these if not applicable. -->
		<is_complete_xpath>//a[@status='Complete']</is_complete_xpath> <!-- xpath that matches if the series has been marked "Complete" -->
		<aio_images_re><![CDATA[(?<=\d":")[^"]*]]></aio_images_re> <!-- regex to match all image urls if the site includes them all on one page. -->
	</site>
	<site name="MangaHere">
		<!-- essential args. must supply all of these -->
		<site_url>http://www.mangahere.cc/</site_url> <!-- url of the main website -->
		<abbr>MH</abbr> <!-- 2 letter abbreviation of the site's name. -->
		<site_parser_re>https?://(?:www\.)?mangahere.cc/manga/.*</site_parser_re> <!-- regex that matches if the given url is a series on this site -->
		<title_xpath>substring(//meta[@name="og:title"]/@content,1)</title_xpath> <!-- xpath that matches the series' title -->
		<chapter_nums_xpath>//ul[@class="detail-main-list"]/li/a/div/p[@class="title3"]/text()</chapter_nums_xpath> <!-- xpath that matches all chapter numbers on the main series page -->
		<chapter_urls_xpath>//ul[@class="detail-main-list"]/li/a/@href</chapter_urls_xpath> <!-- xpath that matches all chapter urls on the main series page -->
		<image_url_xpath>substring(//img[@id='image']/@src,1)</image_url_xpath> <!-- xpath that matches the image url on a given page of the series -->
		<next_url_xpath>substring(//a[text()='&gt;']/@href,1)</next_url_xpath> <!-- xpath that matches the url of the next page on a given page of the series -->
		<!-- optional args, delete these if not applicable. -->
		<chapter_nums_re>Ch\.(\d+\.?\d*)</chapter_nums_re> <!-- regex used to further refine the results of chapter_nums_xpath, default is typically fine. -->
		<licensed_check_re><![CDATA[(has been licensed)]]></licensed_check_re> <!-- regex that matches if series is licensed -->
		<is_complete_xpath>//span[@class="detail-info-right-title-tip" and text()='Completed']</is_complete_xpath> <!-- xpath that matches if the series has been marked "Complete" -->
		<image_delay>1,1.5</image_delay> <!-- Time (in seconds) between image fetches, may be needed to prevent rate limit. Give lower then upper bounds (comma separated). -->
		<use_cfscrape>False</use_cfscrape> <!-- Use the cfscrape session object to fetch data. Only set to false in very specific cases -->
		<custom_cookie_isadult>isAdult,1,www.mangahere.cc,/</custom_cookie_isadult><!-- Add any number of custom cookies, must start with prefix custom_cookie_ check session.cookies.set for syntax (csv) -->
	</site>
	<!-- FanFox, clone of MangaHere. Need to use the same base class hence the site name -->
	<site name="MangaHere">
		<!-- essential args. must supply all of these -->
		<site_url>http://fanfox.net/</site_url> <!-- url of the main website -->
		<abbr>MF</abbr> <!-- 2 letter abbreviation of the site's name. -->
		<site_parser_re>https?://(?:www\.)?fanfox.net/manga/.*</site_parser_re> <!-- regex that matches if the given url is a series on this site -->
		<title_xpath>substring(//meta[@name="og:title"]/@content,1)</title_xpath> <!-- xpath that matches the series' title -->
		<chapter_nums_xpath>//ul[@class="detail-main-list"]/li/a/div/p[@class="title3"]/text()</chapter_nums_xpath> <!-- xpath that matches all chapter numbers on the main series page -->
		<chapter_urls_xpath>//ul[@class="detail-main-list"]/li/a/@href</chapter_urls_xpath> <!-- xpath that matches all chapter urls on the main series page -->
		<image_url_xpath>substring(//img[@id='image']/@src,1)</image_url_xpath> <!-- xpath that matches the image url on a given page of the series -->
		<next_url_xpath>substring(//a[text()='&gt;']/@href,1)</next_url_xpath> <!-- xpath that matches the url of the next page on a given page of the series -->
		<!-- optional args, delete these if not applicable. -->
		<chapter_nums_re>Ch\.(\d+\.?\d*)</chapter_nums_re> <!-- regex used to further refine the results of chapter_nums_xpath, default is typically fine. -->
		<licensed_check_re><![CDATA[(has been licensed)]]></licensed_check_re> <!-- regex that matches if series is licensed -->
		<is_complete_xpath>//span[@class="detail-info-right-title-tip" and text()='Completed']</is_complete_xpath> <!-- xpath that matches if the series has been marked "Complete" -->
		<image_delay>1,1.5</image_delay> <!-- Time (in seconds) between image fetches, may be needed to prevent rate limit. Give lower then upper bounds (comma separated). -->
		<use_cfscrape>False</use_cfscrape> <!-- Use the cfscrape session object to fetch data. Only set to false in very specific cases -->
		<custom_cookie_isadult>isAdult,1,www.fanfox.net,/</custom_cookie_isadult><!-- Add any number of custom cookies, must start with prefix custom_cookie_ check session.cookies.set for syntax (csv) -->
	</site>
	<site name="DynastyScans">
		<!-- essential args. must supply all of these -->
		<site_url>http://dynasty-scans.com/</site_url> <!-- url of the main website -->
		<abbr>DS</abbr> <!-- 2 letter abbreviation of the site's name. -->
		<site_parser_re>https?://(?:www\.)?dynasty-scans.com/(?:series|anthologies)/.*</site_parser_re> <!-- regex that matches if the given url is a series on this site -->
		<title_xpath>substring(//b/text(),1)</title_xpath> <!-- xpath that matches the series' title -->
		<chapter_nums_xpath>//a[@class='name']/text()</chapter_nums_xpath> <!-- xpath that matches all chapter numbers on the main series page -->
		<chapter_urls_xpath>//a[@class='name']/@href</chapter_urls_xpath> <!-- xpath that matches all chapter urls on the main series page -->
		<!-- optional args, delete these if not applicable. -->
		<is_complete_xpath>//small[contains(text(),'Completed')]</is_complete_xpath> <!-- xpath that matches if the series has been marked "Complete" -->
		<chapter_nums_re>Chapter (\d+\.?\d*)(?:v\d+)?</chapter_nums_re> <!-- regex used to further refine the results of chapter_nums_xpath, default is typically fine. -->
		<reverse>False</reverse> <!-- True if chapters are listed in reverse numerical order (latest chapter first) -->
		<aio_images_re><![CDATA[(?<="image":")[^"]*]]></aio_images_re> <!-- regex to match all image urls if the site includes them all on one page. -->
	</site>
	<site name="MangaStream">
		<!-- essential args. you will need most of these. -->
		<site_url>https://www.mangastream.today/</site_url> <!-- url of the main website -->
		<abbr>MS</abbr> <!-- 2 letter abbreviation of the site's name. -->
		<site_parser_re>https?://(?:www\.)?mangastream.today/manga/.*</site_parser_re> <!-- regex that matches if the given url is a series on this site -->
		<title_xpath>substring(//div[contains(@class, 'content')]//h1/text(),1)</title_xpath> <!-- xpath that matches the series' title -->
		<chapter_nums_xpath>//ul[contains(@class, 'version-chap')]/li/a/text()</chapter_nums_xpath> <!-- xpath that matches all chapter numbers on the main series page -->
		<chapter_urls_xpath>//ul[contains(@class, 'version-chap')]/li/a/@href</chapter_urls_xpath> <!-- xpath that matches all chapter urls on the main series page -->
		<!-- optional args, delete these if not applicable. -->
		<aio_images_xpath>//div[@class='reading-content']//img/@src</aio_images_xpath> <!-- xpath to match all image urls if the site includes them all on one page. -->
		<chapter_nums_re>Chapter (\d+\.?\d*)(?:v\d+)?</chapter_nums_re> <!-- regex used to further refine the results of chapter_nums_xpath, default is typically fine. -->
	</site>
	<site name="MangaKakalot">
		<!-- essential args. you will need most of these. -->
		<site_url>http://mangakakalot.com/</site_url> <!-- url of the main website -->
		<abbr>MK</abbr> <!-- 2 letter abbreviation of the site's name. -->
		<site_parser_re>https?://(?:www\.)?mangakakalot.com/(read-|manga/).+</site_parser_re> <!-- regex that matches if the given url is a series on this site -->
		<title_xpath>substring(//h1/text(),1)</title_xpath> <!-- xpath that matches the series' title -->
		<chapter_nums_xpath>//div[@class='row']/span/a/@title</chapter_nums_xpath> <!-- xpath that matches all chapter numbers on the main series page -->
		<chapter_urls_xpath>//div[@class='row']/span/a[@title]/@href</chapter_urls_xpath> <!-- xpath that matches all chapter urls on the main series page -->
		<is_complete_xpath>//li[text()="Status : Completed"]</is_complete_xpath> <!-- xpath that matches if the series has been marked "Complete" -->
		<!-- optional args, delete these if not applicable. -->
		<chapter_nums_re><![CDATA[chapter (\d+\.?\d*)(?:v\d+)?]]></chapter_nums_re> <!-- regex used to further refine the results of chapter_nums_xpath, default is typically fine. -->
		<aio_images_xpath>//div[@class='container-chapter-reader']/img/@src</aio_images_xpath> <!-- xpath to match all image urls if the site includes them all on one page. -->
		<image_referer>https://mangakakalot.com/</image_referer> <!-- If images are hosted on an external site you may need to override the referer header. -->
	</site>
	<site name="MangaNato">
		<!-- Some mangakakalot series redirect to this site. -->
		<!-- essential args. you will need most of these. -->
		<site_url>https://manganato.com/</site_url> <!-- url of the main website -->
		<abbr>NA</abbr> <!-- 2 letter abbreviation of the site's name. -->
		<site_parser_re>https?://(?:ww[35]\.|m\.)?(?:read|chap)manganato.(?:com|tv)/manga[/-].+</site_parser_re> <!-- regex that matches if the given url is a series on this site -->
		<title_xpath>substring(//h1/text(),1)</title_xpath> <!-- xpath that matches the series' title -->
		<chapter_nums_xpath>//a[contains(@class,'chapter-name')]/text()</chapter_nums_xpath> <!-- xpath that matches all chapter numbers on the main series page -->
		<chapter_urls_xpath>//a[contains(@class,'chapter-name')]/@href</chapter_urls_xpath> <!-- xpath that matches all chapter urls on the main series page -->
		<is_complete_xpath>//td[@class="table-value"][text()="Completed"]</is_complete_xpath> <!-- xpath that matches if the series has been marked "Complete" -->
		<!-- optional args, delete these if not applicable. -->
		<chapter_nums_re><![CDATA[chapter (\d+\.?\d*)(?:v\d+)?]]></chapter_nums_re> <!-- regex used to further refine the results of chapter_nums_xpath, default is typically fine. -->
		<aio_images_xpath>//div[@class='container-chapter-reader']/img/@src</aio_images_xpath> <!-- xpath to match all image urls if the site includes them all on one page. -->
		<image_referer>https://manganato.com/</image_referer> <!-- If images are hosted on an external site you may need to override the referer header. -->
	</site>
	<site name="MangaNelo">
		<!-- This is a copy of MangaKakalot, not sure if they are moving to a new site or not. -->
		<site_url>https://manganelo.tv/</site_url> <!-- url of the main website -->
		<abbr>MN</abbr> <!-- 2 letter abbreviation of the site's name. -->
		<site_parser_re>https?://(?:ww[35]\.|m\.)?(?:read|chap)manganelo.(?:com|tv)/manga[/-].+</site_parser_re> <!-- regex that matches if the given url is a series on this site -->
		<title_xpath>substring(//h1/text(),1)</title_xpath> <!-- xpath that matches the series' title -->
		<chapter_nums_xpath>//ul[@class='row-content-chapter']/li/a/@title</chapter_nums_xpath> <!-- xpath that matches all chapter numbers on the main series page -->
		<chapter_urls_xpath>//ul[@class='row-content-chapter']/li/a/@href</chapter_urls_xpath> <!-- xpath that matches all chapter urls on the main series page -->
		<is_complete_xpath>//td[@class="table-value"][text()="Completed"]</is_complete_xpath> <!-- xpath that matches if the series has been marked "Complete" -->
		<!-- optional args, delete these if not applicable. -->
		<chapter_nums_re><![CDATA[chapter (\d+\.?\d*)(?:v\d+)?]]></chapter_nums_re> <!-- regex used to further refine the results of chapter_nums_xpath, default is typically fine. -->
		<aio_images_xpath>//div[@class='container-chapter-reader']/img/@src</aio_images_xpath> <!-- xpath to match all image urls if the site includes them all on one page. -->
		<image_referer>https://manganelo.tv/</image_referer> <!-- If images are hosted on an external site you may need to override the referer header. -->
	</site>
	<site name="Batoto">
		<!-- essential args. you will need most of these. -->
		<site_url>https://bato.to/</site_url> <!-- url of the main website -->
		<abbr>BT</abbr> <!-- 2 letter abbreviation of the site's name. -->
		<site_parser_re>https?://(?:www\.)?bato\.to/series/\d+#?</site_parser_re> <!-- regex that matches if the given url is a series on this site -->
		<title_xpath>substring(//h3[@class='item-title']/a/text(),1)</title_xpath> <!-- xpath that matches the series' title -->
		<chapter_nums_xpath>//div[@class='main']//a/b/text()</chapter_nums_xpath> <!-- xpath that matches all chapter numbers on the main series page -->
		<chapter_urls_xpath>//div[@class='main']//a[contains(@class,'chapt')]/@href</chapter_urls_xpath> <!-- xpath that matches all chapter urls on the main series page -->
		<is_complete_xpath>//div[@class='attr-item']/span[text()='Completed']</is_complete_xpath> <!-- xpath that matches if the series has been marked "Complete" -->
		<!-- optional args, delete these if not applicable. -->
		<aio_images_re><![CDATA[\simages\s*=\s*(\[.+\]);]]></aio_images_re> <!-- regex to match all image urls if the site includes them all on one page. -->
		<bato_key_re>\w batojs\s*=\s*(.+);</bato_key_re>
		<bato_server_re>\w server\s*=\s*"(.+)";</bato_server_re>
		<aio_split_re>"([^"]+)"</aio_split_re>
	</site>
	<site name="MangaWindow">
		<!-- Exact copy of batoto, as it just redirects there. -->
		<site_url>https://mangawindow.net/</site_url> <!-- url of the main website -->
		<abbr>MW</abbr> <!-- 2 letter abbreviation of the site's name. -->
		<site_parser_re>https?://(?:www\.)?mangawindow.(net|com)/series/\d+#?</site_parser_re> <!-- regex that matches if the given url is a series on this site -->
		<title_xpath>substring(//h3[@class='item-title']/a/text(),1)</title_xpath> <!-- xpath that matches the series' title -->
		<chapter_nums_xpath>//div[@class='main']//a/b/text()</chapter_nums_xpath> <!-- xpath that matches all chapter numbers on the main series page -->
		<chapter_urls_xpath>//div[@class='main']//a[contains(@class,'chapt')]/@href</chapter_urls_xpath> <!-- xpath that matches all chapter urls on the main series page -->
		<is_complete_xpath>//div[@class='attr-item']/span[text()='Completed']</is_complete_xpath> <!-- xpath that matches if the series has been marked "Complete" -->
		<!-- optional args, delete these if not applicable. -->
		<aio_images_re><![CDATA["(\/\d*\/images\/[^"]+)"]]></aio_images_re> <!-- regex to match all image urls if the site includes them all on one page. -->
		<bato_key_re>\w batojs\s*=\s*(.+);</bato_key_re>
		<bato_server_re>\w server\s*=\s*"(.+)";</bato_server_re>
	</site>
	<site name="SadPanda">
		<!-- essential args. you will need most of these. -->
		<site_url>https://exhentai.org/</site_url> <!-- url of the main website -->
		<abbr>SP</abbr> <!-- 2 letter abbreviation of the site's name. -->
		<site_parser_re>https?://(?:www\.)?exhentai.org/g/.+</site_parser_re> <!-- regex that matches if the given url is a series on this site -->
		<title_xpath>substring(//h1[@id='gn']/text(),1)</title_xpath> <!-- xpath that matches the series' title -->
		<chapter_nums_xpath>/*/text()[1]</chapter_nums_xpath> <!-- xpath that matches all chapter numbers on the main series page -->
		<chapter_urls_xpath>//div[@class='gdtl'][1]/a/@href</chapter_urls_xpath> <!-- xpath that matches all chapter urls on the main series page -->
		<image_url_xpath>substring(//img[@id='img']/@src,1)</image_url_xpath> <!-- xpath that matches the image url on a given page of the series -->
		<next_url_xpath>substring(//a[@id="next"]/@href,1)</next_url_xpath> <!-- xpath that matches the url of the next page on a given page of the series -->
		<is_complete_xpath>/*/text()[1]</is_complete_xpath> <!-- xpath that matches if the series has been marked "Complete" -->
		<!-- optional args, delete these if not applicable. -->
		<requires_credentials>True</requires_credentials> <!-- True if the site requires login to access images -->
		<author_re>dontremoveauthornames</author_re> <!-- regex to remove author name from a series title for more uniform and clean series names. -->
		<ex_login_url><![CDATA[https://forums.e-hentai.org/index.php?act=Login&CODE=01]]></ex_login_url>
		<sad_panda>ceddf54195d034fab64a7d20c9b0c530</sad_panda>
		<ignore_base_path>True</ignore_base_path> <!-- path changes every page so we need this -->
		<image_delay>0,1</image_delay> <!-- Time (in seconds) between image fetches, may be needed to prevent rate limit. Give lower then upper bounds (comma separated). -->
		<image_download_delay>0,1</image_download_delay> <!-- Same as image_delay but used when downloading the images themselves, used mainly for sites where all image urls can be fetched at once. -->
	</site>
	<site name="HeavenToon">
		<!-- essential args. you will need most of these. -->
		<site_url>http://ww2.heaventoon.com/</site_url> <!-- url of the main website -->
		<abbr>HT</abbr> <!-- 2 letter abbreviation of the site's name. -->
		<site_parser_re>https?://(?:ww\d\.)?heaventoon.com/.*</site_parser_re> <!-- regex that matches if the given url is a series on this site -->
		<title_xpath>substring(//h1[contains(@class,'bigger')]/text(),1)</title_xpath> <!-- xpath that matches the series' title -->
		<chapter_nums_xpath>//h2[@class='chap']//a/text()</chapter_nums_xpath> <!-- xpath that matches all chapter numbers on the main series page -->
		<chapter_urls_xpath>//h2[@class='chap']//a/@href</chapter_urls_xpath> <!-- xpath that matches all chapter urls on the main series page -->
		<is_complete_xpath>//div[@class='update']/span[text()='Completed']</is_complete_xpath> <!-- xpath that matches if the series has been marked "Complete" -->
		<aio_images_xpath>//div[@class='chapter-content']//center//img/@src</aio_images_xpath> <!-- xpath to match all image urls if the site includes them all on one page. -->
		<aio_refinement_re><![CDATA[.*(http.*)]]></aio_refinement_re> <!-- regex to refine results of aio_images_xpath (or re) -->
	</site>
	<site name="MangaSushi">
		<!-- essential args. you will need most of these. -->
		<site_url>https://mangasushi.net/</site_url> <!-- url of the main website -->
		<abbr>SU</abbr> <!-- 2 letter abbreviation of the site's name. -->
		<site_parser_re>https?://(?:www\.)?mangasushi.net/manga/.+</site_parser_re> <!-- regex that matches if the given url is a series on this site -->
		<title_xpath>substring(//meta[@property='og:title']/@content,1)</title_xpath> <!-- xpath that matches the series' title -->
		<chapter_nums_xpath>//li[contains(@class,'wp-manga-chapter')]/a/text()</chapter_nums_xpath> <!-- xpath that matches all chapter numbers on the main series page -->
		<chapter_urls_xpath>//li[contains(@class,'wp-manga-chapter')]/a/@href</chapter_urls_xpath> <!-- xpath that matches all chapter urls on the main series page -->
		<is_complete_xpath>//div[@class='summary-content' and contains(text(),'Completed')]</is_complete_xpath> <!-- xpath that matches if the series has been marked "Complete" -->
		<!-- optional args, delete these if not applicable. -->
		<aio_images_xpath>//img[contains(@id,'image-')]/@data-src</aio_images_xpath> <!-- xpath to match all image urls if the site includes them all on one page. -->
		<aio_refinement_re><![CDATA[\s*(.*)]]></aio_refinement_re> <!-- regex to refine results of aio_images_xpath (or re) -->
	</site>
	<site name="MangaPlus">
		<!-- essential args. you will need most of these. -->
		<site_url>https://mangaplus.shueisha.co.jp/</site_url> <!-- url of the main website -->
		<abbr>PL</abbr> <!-- 2 letter abbreviation of the site's name. -->
		<site_parser_re><![CDATA[https?://(?:www\.)?mangaplus.shueisha.co.jp/titles/[^/\&\?]+]]></site_parser_re> <!-- regex that matches if the given url is a series on this site -->
	</site>
	<site name="VizWSJ">
		<!-- essential args. you will need most of these. -->
		<site_url>https://www.viz.com/</site_url> <!-- url of the main website -->
		<abbr>SJ</abbr> <!-- 2 letter abbreviation of the site's name. -->
		<site_parser_re>https?://(?:www\.)?viz.com/shonenjump/chapters/.+</site_parser_re> <!-- regex that matches if the given url is a series on this site -->
		<title_xpath>substring(//h2[contains(@class,'type-xxl--lg')],1)</title_xpath> <!-- xpath that matches the series' title -->
		<chapter_nums_xpath>//div[contains(@class,'o_sortable')]/a[not(@onclick)]/@name</chapter_nums_xpath> <!-- xpath that matches all chapter numbers on the main series page -->
		<chapter_urls_xpath>//div[contains(@class,'o_sortable')]/a[not(@onclick)]/@href</chapter_urls_xpath> <!-- xpath that matches all chapter urls on the main series page -->
		<viz_pages_re>pages[ ]*=[ ]*(\d+);</viz_pages_re><!-- used exclusively for viz.com -->
		<viz_cookie_url>https://www.viz.com/account/refresh_login_links</viz_cookie_url><!-- used exclusively for viz.com -->
	</site>
	<site name="MangaMutiny">
		<!-- essential args. you will need most of these. -->
		<site_url>https://mangamutiny.org/</site_url> <!-- url of the main website -->
		<abbr>MM</abbr> <!-- 2 letter abbreviation of the site's name. -->
		<site_parser_re>https?://(?:www\.)?mangamutiny\.org/title/.+</site_parser_re> <!-- regex that matches if the given url is a series on this site -->
		<title_xpath>substring(//meta[@name="title"]/@content,1,string-length(//meta[@name="title"]/@content) - 14)</title_xpath> <!-- xpath that matches the series' title -->
		<chapter_nums_xpath>//main[contains(@class,"overflow-y-auto")]/a/span[1]/text()</chapter_nums_xpath> <!-- xpath that matches all chapter numbers on the main series page -->
		<chapter_urls_xpath>//main[contains(@class,"overflow-y-auto")]/a/@href</chapter_urls_xpath> <!-- xpath that matches all chapter urls on the main series page -->
		<is_complete_xpath>//p[contains(@class,'capitalize') and contains(text(),'completed')]</is_complete_xpath> <!-- xpath that matches if the series has been marked "Complete" -->
		<!-- optional args, delete these if not applicable. -->
		<chapter_nums_re><![CDATA[Chapter (\d+\.?\d*)]]></chapter_nums_re> <!-- regex used to further refine the results of chapter_nums_xpath, default is typically fine. -->
		<aio_images_re><![CDATA[images:\[([^\]]*)]]></aio_images_re> <!-- regex to match all image urls if the site includes them all on one page. -->
		<aio_split_re><![CDATA["([^"][^"]+)]]></aio_split_re> <!-- split the results of aio_images, this is done before the refinement_re is applied -->
	</site>
	<!-- Copy this template and use it to add a new site.
	Fields left blank will fall back to their default values, which are fine for most sites.
	Make sure your title, next_url, and image_url xpaths return a string. (use substring(xpath,1))
	ABBR must be unique even among deprecated sites, here is a list of all that are in use:
	AA BT DS DX HT KM KS MH MK MM MN NA MP MR MS MW PA PL RO SE SU SP
	-->
	<site name="TemplateSite">
		<!-- essential args. you will need most of these. -->
		<site_url></site_url> <!-- url of the main website -->
		<abbr>MUST be unique, see list above and update it when adding new parsers</abbr> <!-- 2 letter abbreviation of the site's name. -->
		<site_parser_re></site_parser_re> <!-- regex that matches if the given url is a series on this site -->
		<title_xpath>substring(,1)</title_xpath> <!-- xpath that matches the series' title -->
		<chapter_nums_xpath></chapter_nums_xpath> <!-- xpath that matches all chapter numbers on the main series page -->
		<chapter_urls_xpath></chapter_urls_xpath> <!-- xpath that matches all chapter urls on the main series page -->
		<image_url_xpath>substring(,1)</image_url_xpath> <!-- xpath that matches the image url on a given page of the series -->
		<next_url_xpath>substring(,1)</next_url_xpath> <!-- xpath that matches the url of the next page on a given page of the series -->
		<is_complete_xpath></is_complete_xpath> <!-- xpath that matches if the series has been marked "Complete" -->
		<!-- optional args, delete these if not applicable. -->
		<chapter_nums_re>(\d+\.?\d*)(?:v\d+)? *\Z</chapter_nums_re> <!-- regex used to further refine the results of chapter_nums_xpath, default is typically fine. -->
		<image_url_re></image_url_re> <!-- fallback for image_url_xpath, will override if this is included -->
		<next_url_re></next_url_re> <!-- fallback for next_url_xpath, will override if this is included -->
		<skip_mature></skip_mature> <!-- fragment added to the url to skip mature warnings (example: skip=1) -->
		<licensed_check_re></licensed_check_re> <!-- regex that matches if series is licensed -->
		<requires_credentials></requires_credentials> <!-- True if the site requires login to access images -->
		<reverse></reverse> <!-- True if chapters are listed in reverse numerical order (latest chapter first) this is True by default. -->
		<author_re></author_re> <!-- regex to remove author name from a series title for more uniform and clean series names. -->
		<aio_images_re></aio_images_re> <!-- regex to match all image urls if the site includes them all on one page. -->
		<aio_images_xpath></aio_images_xpath> <!-- xpath to match all image urls if the site includes them all on one page. -->
		<aio_split_re></aio_split_re> <!-- split the results of aio_images, this is done before the refinement_re is applied -->
		<aio_refinement_re></aio_refinement_re> <!-- regex to refine results of aio_images_xpath (or re) -->
		<licensed_error_codes></licensed_error_codes> <!-- some sites use error 403 to indicate a licensed series, this will also accept CSV -->
		<!-- rarely used and site specific settings below here -->
		<batoto_pages_xpath></batoto_pages_xpath> <!-- regex to match all page numbers for batoto. will be further processed (split). -->
		<kissmanga_padding_re></kissmanga_padding_re> <!-- regex to remove padding from kissmanga encrypted urls. -->
		<mangadex_server_re></mangadex_server_re> <!-- all 3 of these mangadex regex parse from js, used to get all image urls at once -->
		<mangadex_dataurl_re></mangadex_dataurl_re>
		<mangadex_page_array_re></mangadex_page_array_re>
		<mangarock_query_version></mangarock_query_version> <!-- used for json query uri -->
		<api_url></api_url> <!-- for sites that have a public api -->
		<ignore_base_path>False</ignore_base_path> <!-- VERY DANGEROUS. Only use if pages of a series don't share the same base url, wrongly setting this to True can cause you to dl and entire series (or multiple) instead of 1 chapter so be careful -->
		<image_referer></image_referer> <!-- If images are hosted on an external site you may need to override the referer header. -->
		<image_delay></image_delay> <!-- Time (in seconds) between image fetches, may be needed to prevent rate limit. This is a range separated by ",", for example: 2,5. -->
		<image_download_delay></image_download_delay> <!-- Same as image_delay but used when downloading the images themselves, used mainly for sites where all image urls can be fetched at once. -->
		<use_cfscrape>True</use_cfscrape> <!-- Use the cfscrape session object to fetch data. Only set to false in very specific cases -->
		<!-- The following 2 are a messy solution used only on animeA which no longer exists. -->
		<page_template_re></page_template_re>
		<all_pages_re></all_pages_re>
		<custom_cookie_1></custom_cookie_1><!-- Add any number of custom cookies, must start with prefix custom_cookie_ check session.cookies.set for syntax (csv) -->
		<bato_key_re>\w batojs\s*=\s*(.+);</bato_key_re>
		<bato_server_re>\w server\s*=\s*"(.+)";</bato_server_re>
	</site>
	<domain_changes>
	<conversion>MS,mangastream.cc,mangastream.today,%mangastream.cc%</conversion>
	<conversion>DX,mangadex.cc,mangadex.org,%mangadex.cc%</conversion>
	<conversion>MN,manganelo.com,manganelo.tv,%manganelo.com%</conversion>
	<conversion>SE,mangaseeonline.us,mangasee123.com,%mangaseeonline.us%</conversion>
	<!-- This is a csv with 4 values:
	1. site ABBR (this is unique)
	2. old substring to be replaced
	3. new substring to replace with
	4. sql matcher for old substrings (to prevent recursive replacement spam)
	example: <conversion>MW,mangawindow.com,mangawindow.net,%mangawindow.com%</conversion>
	-->
	</domain_changes>
	<url_regex_replace>
	<!-- Similar to domain_changes but uses regex: re.sub()	-->
	<conversion>
		<siteabbr>MR</siteabbr>
		<pattern><![CDATA[.html$]]></pattern>
		<replace></replace>
	</conversion>
	<conversion>
		<siteabbr>MR</siteabbr>
		<pattern><![CDATA[\d+\/(?=[^\/]*$)]]></pattern>
		<replace></replace>
	</conversion>
	</url_regex_replace>
	<advert_hashes>
	<mangazoneapp_ad>920d54b4c6afc696cae7dcd07f549d49</mangazoneapp_ad> <!-- found on mangatown (and sites that rip from it, e.g. mangahere -->
	<mangazoneapp_ad_2>a15f2b2e0ebd6bdda7c338135caa8398</mangazoneapp_ad_2> <!-- found on mangatown (and sites that rip from it, e.g. mangahere -->
	</advert_hashes>
	<user_agent_strings>
	<chrome_ua><![CDATA[Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36]]></chrome_ua>
	<firefox_ua><![CDATA[Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:78.0) Gecko/20100101 Firefox/78.0]]></firefox_ua>
	</user_agent_strings>
</sites>